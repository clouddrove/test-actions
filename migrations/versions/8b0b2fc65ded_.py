"""Create necessary business model objects for Requisitions API

Revision ID: 8b0b2fc65ded
Revises: b4fe551c7efd
Create Date: 2023-03-09 09:15:42.105080

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8b0b2fc65ded'
down_revision = 'b4fe551c7efd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pay_scheme',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_pay_scheme')),
    sa.UniqueConstraint('name', name=op.f('uq_pay_scheme_name'))
    )
    op.create_table('requisition_type',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_requisition_type')),
    sa.UniqueConstraint('name', name=op.f('uq_requisition_type_name'))
    )
    op.create_table('department',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_department_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_department')),
    sa.UniqueConstraint('client_id', 'name', name=op.f('uq_department_client_id'))
    )
    op.create_table('purchase_order',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_purchase_order_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase_order'))
    )
    op.create_table('schedule',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_schedule_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schedule')),
    sa.UniqueConstraint('client_id', 'name', name=op.f('uq_schedule_client_id'))
    )
    op.create_table('worker_environment',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_worker_environment_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_worker_environment')),
    sa.UniqueConstraint('client_id', 'name', name=op.f('uq_worker_environment_client_id'))
    )
    op.create_table('worksite',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('zip', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_worksite_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_worksite')),
    sa.UniqueConstraint('client_id', 'name', name=op.f('uq_worksite_client_id'))
    )
    op.create_table('position',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('job_description', sa.String(), nullable=True),
    sa.Column('worker_environment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_position_client_id_client')),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], name=op.f('fk_position_department_id_department')),
    sa.ForeignKeyConstraint(['worker_environment_id'], ['worker_environment.id'], name=op.f('fk_position_worker_environment_id_worker_environment')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_position'))
    )
    op.create_table('purchase_order_department',
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], name=op.f('fk_purchase_order_department_department_id_department')),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_order.id'], name=op.f('fk_purchase_order_department_purchase_order_id_purchase_order')),
    sa.PrimaryKeyConstraint('purchase_order_id', 'department_id', name=op.f('pk_purchase_order_department'))
    )
    op.create_table('worker',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_worker_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_worker'))
    )
    op.create_table('assignment',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('replaced_by_assignment_id', sa.Integer(), nullable=True),
    sa.Column('requisition_id', sa.Integer(), nullable=True),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['replaced_by_assignment_id'], ['assignment.id'], name=op.f('fk_assignment_replaced_by_assignment_id_assignment')),
    sa.ForeignKeyConstraint(['requisition_id'], ['requisition.id'], name=op.f('fk_assignment_requisition_id_requisition')),
    sa.ForeignKeyConstraint(['worker_id'], ['worker.id'], name=op.f('fk_assignment_worker_id_worker')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assignment')),
    sa.UniqueConstraint('requisition_id', 'worker_id', name=op.f('uq_assignment_requisition_id'))
    )
    op.create_table('requisition_present_worker',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('requisition_id', sa.Integer(), nullable=True),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['requisition_id'], ['requisition.id'], name=op.f('fk_requisition_present_worker_requisition_id_requisition')),
    sa.ForeignKeyConstraint(['worker_id'], ['worker.id'], name=op.f('fk_requisition_present_worker_worker_id_worker')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_requisition_present_worker')),
    sa.UniqueConstraint('requisition_id', 'worker_id', name=op.f('uq_requisition_present_worker_requisition_id'))
    )
    with op.batch_alter_table('requisition', schema=None) as batch_op:
        batch_op.add_column(sa.Column('state', sa.String(), server_default='pending', nullable=True))
        batch_op.add_column(sa.Column('client_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('purchase_order_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('position_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('num_assignments', sa.Integer(), server_default='1', nullable=True))
        batch_op.add_column(sa.Column('department_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('supervisor_user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('timecard_approver_user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('worksite_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('pay_rate', sa.Numeric(), nullable=True))
        batch_op.add_column(sa.Column('requisition_type_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('pay_scheme_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('schedule_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('start_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('estimated_end_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('additional_information', sa.String(), server_default='', nullable=True))
        batch_op.add_column(sa.Column('employee_info', sa.JSON(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_requisition_position_id_position'), 'position', ['position_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_timecard_approver_user_id_user'), 'user', ['timecard_approver_user_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_purchase_order_id_purchase_order'), 'purchase_order', ['purchase_order_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_worksite_id_worksite'), 'worksite', ['worksite_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_requisition_type_id_requisition_type'), 'requisition_type', ['requisition_type_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_schedule_id_schedule'), 'schedule', ['schedule_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_supervisor_user_id_user'), 'user', ['supervisor_user_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_client_id_client'), 'client', ['client_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_department_id_department'), 'department', ['department_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_pay_scheme_id_pay_scheme'), 'pay_scheme', ['pay_scheme_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_created_uid_user'), 'user', ['created_uid'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('requisition', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_requisition_created_uid_user'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_pay_scheme_id_pay_scheme'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_department_id_department'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_client_id_client'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_supervisor_user_id_user'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_schedule_id_schedule'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_requisition_type_id_requisition_type'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_worksite_id_worksite'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_purchase_order_id_purchase_order'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_timecard_approver_user_id_user'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_position_id_position'), type_='foreignkey')
        batch_op.drop_column('employee_info')
        batch_op.drop_column('additional_information')
        batch_op.drop_column('estimated_end_date')
        batch_op.drop_column('start_date')
        batch_op.drop_column('schedule_id')
        batch_op.drop_column('pay_scheme_id')
        batch_op.drop_column('requisition_type_id')
        batch_op.drop_column('pay_rate')
        batch_op.drop_column('worksite_id')
        batch_op.drop_column('timecard_approver_user_id')
        batch_op.drop_column('supervisor_user_id')
        batch_op.drop_column('department_id')
        batch_op.drop_column('num_assignments')
        batch_op.drop_column('position_id')
        batch_op.drop_column('purchase_order_id')
        batch_op.drop_column('client_id')
        batch_op.drop_column('state')

    op.drop_table('requisition_present_worker')
    op.drop_table('assignment')
    op.drop_table('worker')
    op.drop_table('purchase_order_department')
    op.drop_table('position')
    op.drop_table('worksite')
    op.drop_table('worker_environment')
    op.drop_table('schedule')
    op.drop_table('purchase_order')
    op.drop_table('department')
    op.drop_table('requisition_type')
    op.drop_table('pay_scheme')
    # ### end Alembic commands ###
