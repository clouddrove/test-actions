"""Add Categories, Contracts, Job Classifications and Update Assignments model

Revision ID: 1c62c1aa899d
Revises: 0662a1fee843
Create Date: 2023-04-27 20:15:40.134455

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1c62c1aa899d'
down_revision = '0662a1fee843'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category')),
    sa.UniqueConstraint('key', name=op.f('uq_category_key'))
    )
    op.create_table('contract_term_definition',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ref', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('TEXT', 'CURRENCY', 'PERCENT', 'INTEGER', 'DECIMAL', 'DATE', 'TIMESTAMP', name='contracttermtype'), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contract_term_definition')),
    sa.UniqueConstraint('ref', name=op.f('uq_contract_term_definition_ref'))
    )
    op.create_table('job_classification',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_term_prefix', sa.String(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job_classification')),
    sa.UniqueConstraint('contract_term_prefix', name=op.f('uq_job_classification_contract_term_prefix'))
    )
    op.create_table('supplier',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_supplier')),
    sa.UniqueConstraint('name', name=op.f('uq_supplier_name'))
    )
    op.create_table('category_item',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(), nullable=True, comment='String ID for a category item. May not change once set.'),
    sa.Column('label', sa.String(), nullable=True, comment='Short label for displaying category item. May change.'),
    sa.Column('description', sa.String(), nullable=True, comment='Optional longer description of the category item meaning.'),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_category_item_category_id_category')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category_item')),
    sa.UniqueConstraint('category_id', 'key', name=op.f('uq_category_item_category_id'))
    )
    op.create_table('contract',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('effective_start_date', sa.Date(), nullable=False),
    sa.Column('effective_end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_contract_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contract')),
    sa.UniqueConstraint('client_id', 'effective_start_date', name=op.f('uq_contract_client_id'))
    )
    op.create_table('contract_term',
    sa.Column('ext_ref', sa.String(), server_default='', nullable=True),
    sa.Column('created_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified_uid', sa.Integer(), server_default='1', nullable=True),
    sa.Column('modified_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=True),
    sa.Column('contract_term_definition_id', sa.Integer(), nullable=True),
    sa.Column('val_numeric', sa.Numeric(), nullable=True),
    sa.Column('val_char', sa.String(), nullable=True),
    sa.Column('val_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], name=op.f('fk_contract_term_contract_id_contract')),
    sa.ForeignKeyConstraint(['contract_term_definition_id'], ['contract_term_definition.id'], name=op.f('fk_contract_term_contract_term_definition_id_contract_term_definition')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contract_term'))
    )

    assignment_state_enum = sa.Enum(
        'ACTIVE', 'CANCELED', 'OPEN', 'ONBOARDING', 'ONBOARDING_COMPLETE', 'OFFER_MADE',
        'ENDED', 'OFFER_AWAITING_APPROVAL', 'PENDING_START', name='assignmentstate')
    assignment_state_enum.create(op.get_bind(), checkfirst=True)

    with op.batch_alter_table('assignment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', assignment_state_enum, nullable=True))
        batch_op.add_column(sa.Column('department_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('ended_by_uid', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('canceled_by_uid', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('tentative_start_date', sa.Date(), nullable=True, comment='Start date proposed at the time the job offer is made. This is often a "best guess"'))
        batch_op.add_column(sa.Column('actual_start_date', sa.Date(), nullable=True, comment='ACTUAL start date this worker started the job (this does not always match the date the worker was tracked in the system)'))
        batch_op.add_column(sa.Column('system_start_date', sa.Date(), nullable=True, comment="Date the worker's assignment started tracking in the RTI system. This does not always match the worker's ACTUAL start date with the position"))
        batch_op.add_column(sa.Column('tentative_end_date', sa.Date(), nullable=True, comment='Tentative Assignment end date. Does not always match ACTUAL end date.'))
        batch_op.add_column(sa.Column('actual_end_date', sa.Date(), nullable=True, comment='ACTUAL end date this worker ended the job'))
        batch_op.add_column(sa.Column('end_reason_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('end_notes', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('cancel_notes', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('timesheets_worker_editable', sa.Boolean(), server_default='0', nullable=True))
        batch_op.add_column(sa.Column('timesheets_web_punchable', sa.Boolean(), server_default='1', nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_assignment_canceled_by_uid_user'), 'user', ['canceled_by_uid'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_assignment_end_reason_id_category_item'), 'category_item', ['end_reason_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_assignment_ended_by_uid_user'), 'user', ['ended_by_uid'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_assignment_department_id_department'), 'department', ['department_id'], ['id'])

    with op.batch_alter_table('position', schema=None) as batch_op:
        batch_op.add_column(sa.Column('job_classification_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_position_job_classification_id_job_classification'), 'job_classification', ['job_classification_id'], ['id'])

    # Avoid foreign key violations by null-ing requisition_type_id and pay_scheme_id
    op.get_bind().execute('UPDATE requisition SET requisition_type_id = NULL, pay_scheme_id = NULL')

    with op.batch_alter_table('requisition', schema=None) as batch_op:
        batch_op.drop_constraint('fk_requisition_requisition_type_id_requisition_type', type_='foreignkey')
        batch_op.drop_constraint('fk_requisition_pay_scheme_id_pay_scheme', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_requisition_requisition_type_id_category_item'), 'category_item', ['requisition_type_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_requisition_pay_scheme_id_category_item'), 'category_item', ['pay_scheme_id'], ['id'])

    with op.batch_alter_table('worker', schema=None) as batch_op:
        batch_op.add_column(sa.Column('supplier_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_worker_supplier_id_supplier'), 'supplier', ['supplier_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('worker', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_worker_supplier_id_supplier'), type_='foreignkey')
        batch_op.drop_column('supplier_id')

    with op.batch_alter_table('requisition', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_requisition_pay_scheme_id_category_item'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_requisition_requisition_type_id_category_item'), type_='foreignkey')
        batch_op.create_foreign_key('fk_requisition_pay_scheme_id_pay_scheme', 'pay_scheme', ['pay_scheme_id'], ['id'])
        batch_op.create_foreign_key('fk_requisition_requisition_type_id_requisition_type', 'requisition_type', ['requisition_type_id'], ['id'])

    with op.batch_alter_table('position', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_position_job_classification_id_job_classification'), type_='foreignkey')
        batch_op.drop_column('job_classification_id')

    with op.batch_alter_table('assignment', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_assignment_department_id_department'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_assignment_ended_by_uid_user'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_assignment_end_reason_id_category_item'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_assignment_canceled_by_uid_user'), type_='foreignkey')
        batch_op.drop_column('timesheets_web_punchable')
        batch_op.drop_column('timesheets_worker_editable')
        batch_op.drop_column('cancel_notes')
        batch_op.drop_column('end_notes')
        batch_op.drop_column('end_reason_id')
        batch_op.drop_column('actual_end_date')
        batch_op.drop_column('tentative_end_date')
        batch_op.drop_column('system_start_date')
        batch_op.drop_column('actual_start_date')
        batch_op.drop_column('tentative_start_date')
        batch_op.drop_column('canceled_by_uid')
        batch_op.drop_column('ended_by_uid')
        batch_op.drop_column('department_id')
        batch_op.drop_column('status')

    op.drop_table('contract_term')
    op.drop_table('contract')
    op.drop_table('category_item')
    op.drop_table('supplier')
    op.drop_table('job_classification')
    op.drop_table('contract_term_definition')
    op.drop_table('category')
    # ### end Alembic commands ###
